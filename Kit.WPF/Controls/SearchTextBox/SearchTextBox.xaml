<local:ObservableUserControl  xmlns:local="clr-namespace:Kit.WPF.Controls"
                              x:Class="Kit.WPF.Controls.SearchTextBox"
                              xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                              xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                              xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                              xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                              xmlns:au="http://wpfcontrols.com/" xmlns:hc="https://handyorg.github.io/handycontrol" xmlns:sys="clr-namespace:System;assembly=mscorlib"
                              mc:Ignorable="d" x:Name="Me" d:DesignWidth="251.333">
    <local:ObservableUserControl.Resources>
        <Style TargetType="{x:Type ScrollBar}">
            <Setter Property="Width" Value="20" />
            <Setter Property="MinWidth" Value="20" />
            <Setter Property="Background" Value="#9E9E9E" />
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <!--<Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
            <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>-->
        </Style>

        <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Background" Value="Black"/>
        </Style>
        <Style x:Key="VerticalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Background" Value="Black"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
        </Style>
        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Background" Value="Black"/>
        </Style>

        <Style x:Key="HorizontalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Background" Value="Black"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
        </Style>

    </local:ObservableUserControl.Resources>
    <Grid>
        <TextBox TextChanged="TextBox_OnTextChanged" GotMouseCapture="TextBox_GotMouseCapture" x:Name="TextBox" Margin="0" LostFocus="TextBox_LostFocus" PreviewKeyDown="TextBox_KeyDown"/>
        <Popup MinWidth="400" Margin="0" IsOpen="{Binding IsOpen,Mode=TwoWay}"
                                   Width="{Binding ActualWidth,ElementName=TextBox}" 
                                   DataContext="{Binding Provider,ElementName=Me}" 
                                   HorizontalOffset="0"
                                   MinHeight="25"
                                   MaxHeight="600"
                                   AllowsTransparency="True"
                                   PopupAnimation="Slide"
                                   Focusable="True">
            <Border BorderBrush="MidnightBlue" BorderThickness="1">
                <local:CardView>
                    <local:CardView.Header>
                        <Grid>
                            <Button Click="Close_Click" HorizontalAlignment="Right" Height="20" Padding="1" BorderBrush="Black" BorderThickness="0">
                                <Image Source="/Etiquetador;component/Imgs/cancel.png"/>
                            </Button>
                        </Grid>
                    </local:CardView.Header>
                    <DataGrid IsReadOnly="True" MaxHeight="200" ScrollViewer.VerticalScrollBarVisibility="Visible" 
                                  x:Name="Datagrid" AutoGenerateColumns="True" 
                                  ItemsSource="{Binding Suggestions,Mode=OneWay}" 
                                  Margin="3" MinHeight="100"
                                  CanUserDeleteRows="False" CanUserAddRows="False" CanUserResizeRows="False" CanUserReorderColumns="False"
                                  PreviewKeyUp="DataGrid_PreviewKeyUp">
                        <DataGrid.RowStyle>
                            <Style TargetType="DataGridRow" >
                                <EventSetter Event="MouseDoubleClick" Handler="DataGridRow_MouseDoubleClick"/>
                                <Setter Property="Padding" Value="0"/>
                            </Style>
                        </DataGrid.RowStyle>
                        <DataGrid.Template>
                            <ControlTemplate TargetType="{x:Type DataGrid}">
                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                                    <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                                        <ScrollViewer.Template>
                                            <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="Auto"/>
                                                        <RowDefinition Height="*"/>
                                                        <RowDefinition Height="Auto"/>
                                                    </Grid.RowDefinitions>
                                                    <Button Background="Black" Command="{x:Static DataGrid.SelectAllCommand}" Focusable="false" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                    <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                    <ScrollContentPresenter  x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" Grid.ColumnSpan="2" Grid.Row="1"/>
                                                    <ScrollBar x:Name="PART_VerticalScrollBar" Background="Black" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Grid.Row="1" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
                                                    <Grid Grid.Column="1" Grid.Row="2">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                            <ColumnDefinition Width="*"/>
                                                        </Grid.ColumnDefinitions>
                                                        <ScrollBar x:Name="PART_HorizontalScrollBar" 
                                                       Grid.Column="1" 
                                                       Maximum="{TemplateBinding ScrollableWidth}" 
                                                       Orientation="Horizontal" 
                                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" 
                                                       Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                                       ViewportSize="{TemplateBinding ViewportWidth}"
                                                       />
                                                    </Grid>
                                                </Grid>
                                            </ControlTemplate>
                                        </ScrollViewer.Template>
                                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </ScrollViewer>
                                </Border>
                            </ControlTemplate>
                        </DataGrid.Template>
                    </DataGrid>
                </local:CardView>
            </Border>
        </Popup>
    </Grid>
</local:ObservableUserControl>
